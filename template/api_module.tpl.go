// Code generated by hero.
// source: /Users/kingphang/Workspaces/uau/ebot/template/api_module.tpl
// DO NOT EDIT!
package template

import (
	"bytes"
	"github.com/uauteam/ebot/project"

	"github.com/shiyanhui/hero"
)

func GenerateApiModuleFile(m *project.Metadata, buffer *bytes.Buffer) {
	buffer.WriteString(`
package api

import (
	"github.com/labstack/echo"
	"`)
	hero.EscapeHTML(m.RepoHost, buffer)
	buffer.WriteString(`/`)
	hero.EscapeHTML(m.RepoUser, buffer)
	buffer.WriteString(`/`)
	hero.EscapeHTML(m.RepoName, buffer)
	buffer.WriteString(`/api/query"
	"`)
	hero.EscapeHTML(m.RepoHost, buffer)
	buffer.WriteString(`/`)
	hero.EscapeHTML(m.RepoUser, buffer)
	buffer.WriteString(`/`)
	hero.EscapeHTML(m.RepoName, buffer)
	buffer.WriteString(`/api/req"
	"`)
	hero.EscapeHTML(m.RepoHost, buffer)
	buffer.WriteString(`/`)
	hero.EscapeHTML(m.RepoUser, buffer)
	buffer.WriteString(`/`)
	hero.EscapeHTML(m.RepoName, buffer)
	buffer.WriteString(`/svc"
	"net/http"
	"strconv"
)

func Create`)
	hero.EscapeHTML(m.ModuleTitleName, buffer)
	buffer.WriteString(`(c echo.Context) (err error) {
	`)
	hero.EscapeHTML(m.ModuleName, buffer)
	buffer.WriteString(`Req := new(req.`)
	hero.EscapeHTML(m.ModuleTitleName, buffer)
	buffer.WriteString(`Req)
	if err = c.Bind(`)
	hero.EscapeHTML(m.ModuleName, buffer)
	buffer.WriteString(`Req); err != nil {
		return
	}

	`)
	hero.EscapeHTML(m.ModuleName, buffer)
	buffer.WriteString(`Resp, err := svc.Create`)
	hero.EscapeHTML(m.ModuleTitleName, buffer)
	buffer.WriteString(`(`)
	hero.EscapeHTML(m.ModuleName, buffer)
	buffer.WriteString(`Req)
    if err != nil {
        return
    }

	return c.JSON(http.StatusOK, `)
	hero.EscapeHTML(m.ModuleName, buffer)
	buffer.WriteString(`Resp)
}

func Get`)
	hero.EscapeHTML(m.ModuleTitleName, buffer)
	buffer.WriteString(`(c echo.Context) (err error) {
	id, err := strconv.Atoi(c.Param("id"))
	if err != nil {
		return
	}

	`)
	hero.EscapeHTML(m.ModuleName, buffer)
	buffer.WriteString(`Resp, err := svc.Get`)
	hero.EscapeHTML(m.ModuleTitleName, buffer)
	buffer.WriteString(`(uint(id))
    if err != nil {
        return
    }

	return c.JSON(http.StatusOK, `)
	hero.EscapeHTML(m.ModuleName, buffer)
	buffer.WriteString(`Resp)
}

func Find`)
	hero.EscapeHTML(m.ModuleTitleNamePlural, buffer)
	buffer.WriteString(`(c echo.Context)(err error) {
	`)
	hero.EscapeHTML(m.ModuleName, buffer)
	buffer.WriteString(`Query := new(query.`)
	hero.EscapeHTML(m.ModuleTitleName, buffer)
	buffer.WriteString(`Query)
	if err = c.Bind(`)
	hero.EscapeHTML(m.ModuleName, buffer)
	buffer.WriteString(`Query); err != nil {
		return
	}

	`)
	hero.EscapeHTML(m.ModuleName, buffer)
	buffer.WriteString(`RespList, err := svc.Find`)
	hero.EscapeHTML(m.ModuleTitleNamePlural, buffer)
	buffer.WriteString(`(`)
	hero.EscapeHTML(m.ModuleName, buffer)
	buffer.WriteString(`Query)
    if err != nil {
        return
    }

	return c.JSON(http.StatusOK, `)
	hero.EscapeHTML(m.ModuleName, buffer)
	buffer.WriteString(`RespList)
}

func Update`)
	hero.EscapeHTML(m.ModuleTitleName, buffer)
	buffer.WriteString(`(c echo.Context) (err error) {
	id, err := strconv.Atoi(c.Param("id"))
	if err != nil {
		return
	}

	`)
	hero.EscapeHTML(m.ModuleName, buffer)
	buffer.WriteString(`Req := new(req.`)
	hero.EscapeHTML(m.ModuleTitleName, buffer)
	buffer.WriteString(`Req)
	if err = c.Bind(`)
	hero.EscapeHTML(m.ModuleName, buffer)
	buffer.WriteString(`Req); err != nil {
		return
	}

    `)
	hero.EscapeHTML(m.ModuleName, buffer)
	buffer.WriteString(`Resp, err := svc.Update`)
	hero.EscapeHTML(m.ModuleTitleName, buffer)
	buffer.WriteString(`(uint(id), `)
	hero.EscapeHTML(m.ModuleName, buffer)
	buffer.WriteString(`Req)
	if err != nil {
		return
	}

	return c.JSON(http.StatusOK, `)
	hero.EscapeHTML(m.ModuleName, buffer)
	buffer.WriteString(`Resp)
}`)

}
